//Generated by wsdl2apex
public class PPSSPriceGuidance {
    public class PRICE_GUIDANCE_DATASET_InterfaceHttpSoap11Endpoint {
        public String endpoint_x = label.PPSS_ENDPOINT;
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://interfaces.ppss.prosrm.com', 'PPSSPriceGuidance', 'http://interfaces.ppss.prosrm.com/xsd', 'PPSSPriceGuidanceXsd'};

        public PPSSPriceGuidanceXsd.Return_Status[] sendPRICE_GUIDANCE_DATASET(String[] options,PPSSPriceGuidanceXsd.PRICE_GUIDANCE_DATASET[] data) {
            PPSSPriceGuidanceXsd.sendPRICE_GUIDANCE_DATASET_element request_x = new PPSSPriceGuidanceXsd.sendPRICE_GUIDANCE_DATASET_element();
            request_x.options = options;
            request_x.data = data;
            PPSSPriceGuidanceXsd.sendPRICE_GUIDANCE_DATASETResponse_element response_x;
            Map<String, PPSSPriceGuidanceXsd.sendPRICE_GUIDANCE_DATASETResponse_element> response_map_x = new Map<String, PPSSPriceGuidanceXsd.sendPRICE_GUIDANCE_DATASETResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'urn:sendPRICE_GUIDANCE_DATASET',
              'http://interfaces.ppss.prosrm.com/xsd',
              'sendPRICE_GUIDANCE_DATASET',
              'http://interfaces.ppss.prosrm.com/xsd',
              'sendPRICE_GUIDANCE_DATASETResponse',
              'PPSSPriceGuidanceXsd.sendPRICE_GUIDANCE_DATASETResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }

        public PPSSPriceGuidanceXsd.Return_Status[] putPRICE_GUIDANCE_DATASET(Integer mode,
                                                                              PPSSPriceGuidanceXsd.PRICE_GUIDANCE_DATASET[] data)
        {
            PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_element request_x =
                new PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_element();
            request_x.mode = mode;
            request_x.data = data;
            PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element response_x;
            Map<String, PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element> response_map_x = new Map<String, PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'urn:putPRICE_GUIDANCE_DATASET',
              'http://interfaces.ppss.prosrm.com/xsd',
              'putPRICE_GUIDANCE_DATASET',
              'http://interfaces.ppss.prosrm.com/xsd',
              'putPRICE_GUIDANCE_DATASETResponse',
              'PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }

        public PPSSPriceGuidanceXsd.Return_Status[] putPRICE_GUIDANCE_DATASET_Async(Integer mode,PPSSPriceGuidanceXsd.PRICE_GUIDANCE_DATASET[] data) {
            PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_Async_element request_x = new PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_Async_element();
            request_x.mode = mode;
            request_x.data = data;
            PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_AsyncResponse_element response_x;
            Map<String, PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_AsyncResponse_element> response_map_x = new Map<String, PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_AsyncResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'urn:putPRICE_GUIDANCE_DATASET_Async',
              'http://interfaces.ppss.prosrm.com/xsd',
              'putPRICE_GUIDANCE_DATASET_Async',
              'http://interfaces.ppss.prosrm.com/xsd',
              'putPRICE_GUIDANCE_DATASET_AsyncResponse',
              'PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_AsyncResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }
    }
    
    @future(callout=true)
    public static void putData2(set<id> oldOpportunityIdSet, map<String,String> newOpportunityId2Customer) {
      
           /* List<CameleonCPQ__Quote__c>  camQuoteList = [SELECT ID,OpportunityId__c FROM CameleonCPQ__Quote__c];
            System.debug('putData2:camQuoteList.size():' + camQuoteList.size());
            for(Integer i = 0; i < camQuoteList.size(); i++){
                System.debug('putData2:OpportunityId__c:' + i + ':' + camQuoteList[i].id + ':' + camQuoteList[i].OpportunityId__c); 
            }*/
            
            
            map<id,CameleonCPQ__Quote__c> camQuoteMap = new map<id,CameleonCPQ__Quote__c>();
            List<CameleonCPQ__Quote__c>  camQuoteList = [SELECT ID, 
                                                                contract_start_date__c, 
                                                                contract_end_date__c, 
                                                                Pricing_Reference_Date__c, 
                                                                OpportunityId__c  
                                                         FROM CameleonCPQ__Quote__c
                                                         WHERE OpportunityId__c IN :oldOpportunityIdSet
                                                               AND CameleonCPQ__Status__c = 'Customer_Accepted']; 
                                                           
            for(Integer i = 0; i < camQuoteList.size(); i++){
                camQuoteMap.put(camQuoteList[i].OpportunityId__c , camQuoteList[i]); 
            }
            
            List<OpportunityLineItem> oppLineList= [SELECT Months__c,
                                                           Services__c, 
                                                           Target_Price__c,
                                                           Stretch_Price__c,
                                                           Raw_Target__c,
                                                           Raw_Stretch__c,
                                                           Raw_Floor__c,
                                                           Quantity,
                                                           ProductCode,
                                                           Floor_Price__c,
                                                           OpportunityId 
                                                    FROM OpportunityLineItem
                                                    WHERE OpportunityId = :oldOpportunityIdSet];
                                                    
            Date Default_contractStartDate  = date.newinstance(9999, 12, 31);
            Date Default_contractEndDate    = date.newinstance(9999, 12, 31);
            Date Default_priceReferenceDate = date.newinstance(9999, 12, 31); 
            ContractKeyGenerator keyGen = new ContractKeyGenerator();                                   
            
            for(Integer i = 0; i < oppLineList.size(); i++) {
                Date contractStartDate  = null;
                Date contractEndDate  = null;
                Date priceReferenceDate  = null;
                if(camQuoteMap.containskey(oppLineList[i].OpportunityId)){
                  contractStartDate = camQuoteMap.get(oppLineList[i].OpportunityId).contract_start_date__c;
                  contractEndDate = camQuoteMap.get(oppLineList[i].OpportunityId).contract_end_date__c ;
                  priceReferenceDate = camQuoteMap.get(oppLineList[i].OpportunityId).Pricing_Reference_Date__c;
                } 
                
                if(contractStartDate == null) contractStartDate = Default_contractStartDate;
                if(contractEndDate == null) contractEndDate = Default_contractEndDate;
                if(priceReferenceDate == null) priceReferenceDate = Default_priceReferenceDate;
                
                String customer = newOpportunityId2Customer.get(oppLineList[i].OpportunityId);
                
                System.debug('**** sending opportunity line item values ****** '
                             + ' ' + oppLineList[i].OpportunityId
                             + ' ' + oppLineList[i].Id 
                             + ' ' + oppLineList[i].ProductCode 
                             + ' ' + customer 
                             + ' ' + oppLineList[i].Target_Price__c
                             + ' ' + contractStartDate
                             + ' ' + contractEndDate
                             + ' ' + priceReferenceDate
                             );
                            
                List<String> lineItemKeys = keyGen.generateKeys(oppLineList[i].Months__c,oppLineList[i].Services__c);
                for (String key : lineItemKeys){
                     PPSSPriceGuidance.putData(1 ,
                                          key,
                                          customer,
                                          oppLineList[i].ProductCode,
                                          oppLineList[i].Floor_Price__c,
                                          oppLineList[i].Stretch_Price__c,
                                          oppLineList[i].Target_Price__c,
                                          oppLineList[i].Raw_Floor__c,
                                          oppLineList[i].Raw_Stretch__c,
                                          oppLineList[i].Raw_Target__c,
                                          contractStartDate,
                                          contractEndDate,
                                          priceReferenceDate);                    
                
                }
            }   
            
                                                          
    }

    //@future(callout=true)
    private static void putData( Integer mode,
                                String lineItemId,
                                String customer,
                                String productCode,
                                Decimal floorPrice,
                                Decimal stretchPrice,
                                Decimal targetPrice,
                                Decimal rawFloorPrice,
                                Decimal rawStretchPrice,
                                Decimal rawTargetPrice,
                                Date contractStartDate,
                                Date contractEndDate,
                                Date priceReferenceDate)

    {
        PPSSPriceGuidance.PRICE_GUIDANCE_DATASET_InterfaceHttpSoap11Endpoint endPoint =
            new PPSSPriceGuidance.PRICE_GUIDANCE_DATASET_InterfaceHttpSoap11Endpoint();
        PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_element request_x =
                new PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASET_element();
        request_x.mode = mode;

        PPSSPriceGuidanceXsd.PRICE_GUIDANCE_DATASET data =
            new PPSSPriceGuidanceXsd.PRICE_GUIDANCE_DATASET();
       
        data.CONTRACT_KEY_LINE_ITEM = lineItemId;
        data.CUSTOMER = customer;
        data.PRODUCT = productCode;
        data.ADJ_FLOOR = String.valueOf(floorPrice);
        data.ADJ_STRETCH = String.valueOf(stretchPrice);
        data.ADJ_TARGET = String.valueOf(targetPrice);
        data.RAW_FLOOR = String.valueOf(rawFloorPrice);
        data.RAW_STRETCH = String.valueOf(rawStretchPrice);
        data.RAW_TARGET = String.valueOf(rawTargetPrice);       
        
        data.CONTRACT_START_DAY = String.valueOf(contractStartDate).replace('-','');
        data.CONTRACT_END_DAY = String.valueOf(contractEndDate).replace('-','');
        data.PRICING_REFERENCE_DAY = String.valueOf(priceReferenceDate).replace('-','');
        
        request_x.data =  new PPSSPriceGuidanceXsd.PRICE_GUIDANCE_DATASET[]{data};

        PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element response_x;

        Map<String, PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element> response_map_x =
            new Map<String, PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element>();

        response_map_x.put('response_x', response_x);
        If(!Test.IsRunningTest()){
            WebServiceCallout.invoke(
                endPoint,
                request_x,
                response_map_x,
                new String[]{endPoint.endpoint_x,
                    'urn:putPRICE_GUIDANCE_DATASET',
                    'http://interfaces.ppss.prosrm.com/xsd',
                    'putPRICE_GUIDANCE_DATASET',
                    'http://interfaces.ppss.prosrm.com/xsd',
                    'putPRICE_GUIDANCE_DATASETResponse',
                    'PPSSPriceGuidanceXsd.putPRICE_GUIDANCE_DATASETResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            System.debug('***** PPSSPriceGuidance webservice sent '+
                                    data.CONTRACT_KEY_LINE_ITEM + ' '+
                                    data.CUSTOMER + ' '+
                                    data.PRODUCT + ' '+
                                    data.ADJ_STRETCH +
                                    ' rows inserted:'+ response_x.return_x[0].Num_Inserts +
                                    ' rows updated:'+ response_x.return_x[0].Num_Updates);
            if (response_x.return_x[0].Errors != null){
                System.debug('***** PPSSPriceGuidance webservice error '+ response_x.return_x[0].Errors[0]);
            }
        }
    }
}